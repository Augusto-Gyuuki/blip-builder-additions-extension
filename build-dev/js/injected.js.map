{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Injected.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC","file":"injected.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/Injected.ts\");\n","window.addEventListener(\"message\", (ev) => {\r\n    function clone(cloneable) {\r\n        let copy;\r\n        // Handle the 3 simple types, and null or undefined\r\n        if (null == cloneable || \"object\" !== typeof cloneable) {\r\n            return cloneable;\r\n        }\r\n        // Handle Date\r\n        if (cloneable instanceof Date) {\r\n            copy = new Date();\r\n            copy.setTime(cloneable.getTime());\r\n            return copy;\r\n        }\r\n        // Handle Array\r\n        if (cloneable instanceof Array) {\r\n            copy = [];\r\n            for (let i = 0, len = cloneable.length; i < len; i++) {\r\n                copy[i] = clone(cloneable[i]);\r\n            }\r\n            return copy;\r\n        }\r\n        // Handle Object\r\n        if (cloneable instanceof Object) {\r\n            copy = {};\r\n            for (const attr in cloneable) {\r\n                if (cloneable.hasOwnProperty(attr)) {\r\n                    copy[attr] = clone(cloneable[attr]);\r\n                }\r\n            }\r\n            return copy;\r\n        }\r\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n    }\r\n    const getController = (selector, controller) => {\r\n        const element = window.angular.element(document.querySelector(selector));\r\n        if (element) {\r\n            if (controller) {\r\n                return element.controller(controller);\r\n            }\r\n            else {\r\n                return element.controller();\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    const getControllerVariable = (selector, controllerName, route) => {\r\n        const controller = getController(selector, controllerName);\r\n        if (controller) {\r\n            const paths = route && route.split(\".\");\r\n            let current = controller;\r\n            if (paths) {\r\n                for (const path of paths) {\r\n                    current = current[path];\r\n                    if (current == null) {\r\n                        return null;\r\n                    }\r\n                }\r\n            }\r\n            return current;\r\n        }\r\n        return null;\r\n    };\r\n    if (ev.data && ev.data.type === \"controller-variable\" && ev.data.route) {\r\n        const result = (value) => {\r\n            window.postMessage({\r\n                id: ev.data.id,\r\n                type: \"controller-variable-result\",\r\n                value: clone(value),\r\n            }, \"*\");\r\n        };\r\n        return result(getControllerVariable(ev.data.selector, ev.data.controller, ev.data.route));\r\n    }\r\n    else if (ev.data && ev.data.type === \"intercept-function\" && ev.data.function) {\r\n        const obj = getControllerVariable(ev.data.selector, ev.data.controller, ev.data.route);\r\n        const fnToWrap = obj[ev.data.function];\r\n        obj[ev.data.function] = function () {\r\n            const result = fnToWrap.apply(this, arguments);\r\n            window.postMessage({\r\n                id: ev.data.route + ev.data.function,\r\n                type: \"intercept-function-result\",\r\n            }, \"*\");\r\n            return result;\r\n        };\r\n    }\r\n});\r\n"],"sourceRoot":""}